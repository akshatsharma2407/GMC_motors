name: CI

on: 
  push:
    branches:
      - master

jobs:
  linting:
    runs-on: 'ubuntu-latest'

    steps:

      - name: code checkout
        uses: actions/checkout@v3
      
      - name: set up python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name : install flake8
        run : |
            python -m pip install --upgrade pip
            pip install flake8
      
      - name : run flake8
        run : |
             flake8 src/ --config .flake8
  
  project_testing:
    needs: linting

    runs-on: 'ubuntu-latest'
    
    steps:
      - name: code checkout
        uses: actions/checkout@v3
      
      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'
      
      - name: cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      
      - name: install dependencies
        run: |
          pip install -r requirements.txt
      
      - name: run pipeline
        env:
          DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
        run : |
          dvc repro

      - name: Run model tests
        env:
          DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
        run: |
          python -m unittest tests/test_model.py
      
      - name: promote model to production
        if: success()
        env:
          DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
        run: python scripts/promote_model
      
      - name: Run flask app tests
        if: success()
        env:
          DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
        run: python -m unittest tests/test_flask.py

      - name: Log in to Docker Hub
        if: success()
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }} 
      
      - name: Build Docker Image
        if: success()
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/gmc1:latest
        
      - name: Push Docker image to docker hub
        if: success()
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/gmc1:latest